name: test-release
on:
  push:
    tags:
      - "v*"
jobs:

  build_images:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - id: release
        run: |
          export VERSION=v0.0.11
          helm package deploy/charts/my-sample-chart --app-version ${VERSION} --version ${VERSION}
          echo "RELEASE_HELM_CHART_NAME=my-sample-chart" >> "$GITHUB_OUTPUT"
          echo "RELEASE_HELM_CHART_VERSION=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "RELEASE_HELM_CHART_TAR=my-sample-chart-${VERSION}.tgz" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.release.outputs.RELEASE_HELM_CHART_NAME }}-${{ steps.release.outputs.RELEASE_HELM_CHART_VERSION }}.tgz
          path: ${{ steps.release.outputs.RELEASE_HELM_CHART_TAR }}
          if-no-files-found: error
    
    outputs:
      RELEASE_HELM_CHART_NAME: ${{ steps.release.outputs.RELEASE_HELM_CHART_NAME }}
      RELEASE_HELM_CHART_VERSION: ${{ steps.release.outputs.RELEASE_HELM_CHART_VERSION }}

  ah_release:
    runs-on: ubuntu-latest

    needs: build_images

    permissions:
      contents: write # needed for creating a PR

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - run: |
          touch .notes-file
          echo "HELM_CHART_NAME: ${{ needs.build_images.outputs.RELEASE_HELM_CHART_NAME }}" >> .notes-file
          echo "HELM_CHART_VERSION: ${{ needs.build_images.outputs.RELEASE_HELM_CHART_VERSION }}" >> .notes-file

      - id: chart_download
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build_images.outputs.RELEASE_HELM_CHART_NAME }}-${{ needs.build_images.outputs.RELEASE_HELM_CHART_VERSION }}.tgz

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          skip_packaging: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_PACKAGE_PATH: .
          CR_SKIP_EXISTING: true

      -
        name: Login to docker registry
        uses: docker/login-action@v3
        with:
          registry: registry-1.docker.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: push helm chart to docker hub
        run: |
          helm version
          cd "${{ steps.chart_download.outputs.download-path }}"
          ls -ltr
          helm push "${{ needs.build_images.outputs.RELEASE_HELM_CHART_NAME }}-${{ needs.build_images.outputs.RELEASE_HELM_CHART_VERSION }}.tgz" oci://registry-1.docker.io/${{ secrets.REGISTRY_USERNAME }}